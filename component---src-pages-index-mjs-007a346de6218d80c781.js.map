{"version":3,"sources":["webpack:///./src/pages/index.mjs"],"names":["CATEGORIES","name","items","summary","fix","title","href","note","docs","bug","Feature","footnote","className","rel","renderProject","project","notes","size","key","map","feature","noteIdx","push","length","idx","FeatureOverview","cat"],"mappings":"iNAQMA,G,UAAa,CACjB,CACEC,KAAM,YACNC,MAAO,CACL,CACED,KAAM,QACNC,MAAO,CACL,CACEC,QAAS,wCACTC,IAAK,CACHC,MAAO,SACPC,KAAM,2CACNC,KACE,gDACW,sDADX,OAMN,CACEJ,QAAS,4CACTC,IAAK,CACHC,MAAO,SACPC,KAAM,2CACNC,KAAM,6EAGV,CACEJ,QACE,oCACE,yCADF,6CAOR,CACEF,KAAM,eACNC,MAAO,CACL,CACEC,QAAS,yCAEX,CACEA,QACE,oCACE,yCADF,6CAOR,CACEF,KAAM,aACNC,MAAO,CACL,CACEC,QAAS,yCAEX,CACEA,QACE,uFACwD,IACtD,6CAFF,UAUZ,CACEF,KAAM,aACNC,MAAO,CACL,CACED,KAAM,SACNC,MAAO,CACL,CAAEC,QAAS,yCACX,CACEA,QACE,gDACW,4CADX,gBAKJ,CACEA,QACE,uFACwD,IACtD,2CAFF,MAMJ,CACEA,QACE,mFAC8C,sCAAkB,IADhE,SAKFC,IAAK,CACHC,MAAO,SACPC,KAAM,wDAERE,KACE,6EAEJ,CACEL,QACE,8EACyC,sCADzC,aAOR,CACEF,KAAM,WACNC,MAAO,CACL,CACEC,QAAS,wCACTC,IAAK,CACHC,MAAO,SACPC,KAAM,6CAIV,CACEH,QACE,mFAC8C,sCAAkB,IADhE,SAKFM,IAAK,oDAEP,CACEN,QACE,8EACyC,sCADzC,UAIFM,IAAK,wDAMf,CACER,KAAM,UACNC,MAAO,CACL,CACED,KAAM,WACNC,MAAO,CACL,CACEC,QAAS,qCACTC,IAAK,CACHC,MAAO,SACPC,KAAM,+DAKd,CACEL,KAAM,kBACNC,MAAO,CACL,CACEC,QAAS,qCACTC,KAAK,SAQjB,SAASM,EAAT,GAA8C,IAA3BN,EAA0B,EAA1BA,IAAKD,EAAqB,EAArBA,QAASQ,EAAY,EAAZA,SAC/B,OACE,wBAAIC,UAAWR,GAAO,QACnBD,EACAC,IAAe,IAARA,GACN,oCACG,IACD,uBAAGE,KAAMF,EAAIE,KAAMO,IAAI,YACpBT,EAAIC,QAIVM,GAAY,6BAAMA,IAazB,SAASG,EAAcC,GACrB,IAAIC,EAAQ,GACZ,OACE,kBAAC,OAAD,CAAMC,KAAM,EAAGC,IAAKH,EAAQd,MAC1B,kBAAC,OAAD,KACE,kBAAC,YAAD,CAAWI,MAAOU,EAAQd,OAC1B,kBAAC,WAAD,KACE,wBAAIW,UAAU,YACXG,EAAQb,MAAMiB,KAAI,SAAAC,GACjB,IAAIC,EAAU,KAKd,OAJID,EAAQhB,KAAOgB,EAAQhB,IAAIG,OAC7BS,EAAMM,KAAKF,EAAQhB,IAAIG,MACvBc,EAAUL,EAAMO,QAGhB,kBAACb,EAAD,eACEQ,IAAKE,EAAQjB,QACbQ,SAAUU,GACND,QAKXJ,EAAMO,OAAS,GACd,wBAAIX,UAAU,aACXI,EAAMG,KAAI,SAACZ,EAAMiB,GAChB,OAAO,wBAAIN,IAAKM,GAAMjB,UAUvB,SAASkB,IACtB,OACE,kBAAC,IAAD,KACE,0BAAMb,UAAU,uBACbZ,EAAWmB,KAAI,SAAAO,GAAG,OACjB,kBAAC,OAAD,CAAMR,IAAKQ,EAAIzB,MACb,kBAAC,OAAD,CAAMgB,KAAM,IACV,4BAAKS,EAAIzB,OAEVyB,EAAIxB,MAAMiB,IAAIL","file":"component---src-pages-index-mjs-007a346de6218d80c781.js","sourcesContent":["import React from 'react';\nimport { Card, CardTitle, CardText, Grid, Cell } from 'react-md';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../components/layout.mjs';\n\nimport './index.scss';\n\nconst CATEGORIES = [\n  {\n    name: 'Compilers',\n    items: [\n      {\n        name: 'Babel',\n        items: [\n          {\n            summary: 'CLI can generate module output files.',\n            fix: {\n              title: 'v7.8.0',\n              href: 'https://babeljs.io/blog/2020/01/11/7.8.0',\n              note: (\n                <>\n                  Requires <code>--out-file-extension</code>.\n                </>\n              ),\n            },\n          },\n          {\n            summary: 'Supports config files written as modules.',\n            fix: {\n              title: 'v7.8.0',\n              href: 'https://babeljs.io/blog/2020/01/11/7.8.0',\n              note: <>Only when using babel&apos;s async APIs.</>,\n            },\n          },\n          {\n            summary: (\n              <>\n                <code>require</code> hook gives helpful error for modules.\n              </>\n            ),\n          },\n        ],\n      },\n      {\n        name: 'CoffeeScript',\n        items: [\n          {\n            summary: 'CLI can generate module output files.',\n          },\n          {\n            summary: (\n              <>\n                <code>require</code> hook gives helpful error for modules.\n              </>\n            ),\n          },\n        ],\n      },\n      {\n        name: 'TypeScript',\n        items: [\n          {\n            summary: 'CLI can generate module output files.',\n          },\n          {\n            summary: (\n              <>\n                Doesn&apos;t include CommonJS arguments as globals in{' '}\n                <code>@types/node</code>.\n              </>\n            ),\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: 'Code Style',\n    items: [\n      {\n        name: 'ESLint',\n        items: [\n          { summary: 'Module extension included by default.' },\n          {\n            summary: (\n              <>\n                Defaults <code>sourceType</code> to module.\n              </>\n            ),\n          },\n          {\n            summary: (\n              <>\n                Doesn&apos;t include CommonJS arguments as globals in{' '}\n                <code>env: node</code>.\n              </>\n            ),\n          },\n          {\n            summary: (\n              <>\n                CommonJS configuration can be provided in a <code>.cjs</code>{' '}\n                file.\n              </>\n            ),\n            fix: {\n              title: 'v6.8.0',\n              href: 'https://github.com/eslint/eslint/releases/tag/v6.8.0',\n            },\n            docs:\n              'https://eslint.org/docs/user-guide/configuring#configuration-file-formats',\n          },\n          {\n            summary: (\n              <>\n                ESM configuration can be provided in a <code>.mjs</code> file.\n              </>\n            ),\n          },\n        ],\n      },\n      {\n        name: 'Prettier',\n        items: [\n          {\n            summary: 'Module extension included by default.',\n            fix: {\n              title: 'v7.8.0',\n              href: 'https://babeljs.io/blog/2020/01/11/7.8.0',\n              // Gotcha: Only when using babel's async APIs.\n            },\n          },\n          {\n            summary: (\n              <>\n                CommonJS configuration can be provided in a <code>.cjs</code>{' '}\n                file.\n              </>\n            ),\n            bug: 'https://github.com/prettier/prettier/issues/7049',\n          },\n          {\n            summary: (\n              <>\n                ESM configuration can be provided in a <code>.mjs</code> file.\n              </>\n            ),\n            bug: 'https://github.com/prettier/prettier/issues/7049',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: 'Serving',\n    items: [\n      {\n        name: 'Python 3',\n        items: [\n          {\n            summary: 'Sets proper MIME type for modules.',\n            fix: {\n              title: 'v3.7.2',\n              href: 'https://docs.python.org/3.7/whatsnew/changelog.html#id48',\n            },\n          },\n        ],\n      },\n      {\n        name: 'npx http-server',\n        items: [\n          {\n            summary: 'Sets proper MIME type for modules.',\n            fix: true,\n          },\n        ],\n      },\n    ],\n  },\n];\n\nfunction Feature({ fix, summary, footnote }) {\n  return (\n    <li className={fix && 'done'}>\n      {summary}\n      {fix && fix !== true && (\n        <>\n          {' '}\n          <a href={fix.href} rel=\"noopener\">\n            {fix.title}\n          </a>\n        </>\n      )}\n      {footnote && <sup>{footnote}</sup>}\n    </li>\n  );\n}\nFeature.propTypes = {\n  fix: PropTypes.shape({\n    href: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }),\n  summary: PropTypes.string.isRequired,\n  footnote: PropTypes.number,\n};\n\nfunction renderProject(project) {\n  let notes = [];\n  return (\n    <Cell size={6} key={project.name}>\n      <Card>\n        <CardTitle title={project.name} />\n        <CardText>\n          <ul className=\"features\">\n            {project.items.map(feature => {\n              let noteIdx = null;\n              if (feature.fix && feature.fix.note) {\n                notes.push(feature.fix.note);\n                noteIdx = notes.length;\n              }\n              return (\n                <Feature\n                  key={feature.summary}\n                  footnote={noteIdx}\n                  {...feature}\n                />\n              );\n            })}\n          </ul>\n          {notes.length > 0 && (\n            <ol className=\"footnotes\">\n              {notes.map((note, idx) => {\n                return <li key={idx}>{note}</li>;\n              })}\n            </ol>\n          )}\n        </CardText>\n      </Card>\n    </Cell>\n  );\n}\n\nexport default function FeatureOverview() {\n  return (\n    <Layout>\n      <main className=\"md-toolbar-relative\">\n        {CATEGORIES.map(cat => (\n          <Grid key={cat.name}>\n            <Cell size={12}>\n              <h2>{cat.name}</h2>\n            </Cell>\n            {cat.items.map(renderProject)}\n          </Grid>\n        ))}\n      </main>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}